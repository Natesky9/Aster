<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 16
nearest = -1
direction = 0



vertex_format_begin()
vertex_format_add_position()
vertex_format_add_colour()
basic = vertex_format_end();


hex_center = vertex_create_buffer();
hex_edge = vertex_create_buffer();

rock_color = make_color_rgb(128,128,128)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var smallest_dist = size
old_nearest = nearest
nearest = -1
var i

for (i = 0; i &lt; ds_list_size(list);i += 1)
    {
    var ii = ds_list_find_value(list,i)
    var xx = x+ds_map_find_value(ii,"xx")-xoff
    var yy = y+ds_map_find_value(ii,"yy")-yoff
    
    var dist = point_distance(xx,yy,mouse_x,mouse_y)
    if dist &lt; smallest_dist
        {
        smallest_dist = dist
        nearest = ii
        }
    }

if nearest != old_nearest
sound(boop)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if nearest != -1
    {
    ds_map_replace(nearest,"col",choose(c_orange,c_red,c_green))
    Hex_Color()
    Create_Hex()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var get_hex = ds_list_find_index(list,nearest)
if get_hex &gt;= 0
    {
    var get_x = ds_map_find_value(nearest,"grid_x")
    var get_y = ds_map_find_value(nearest,"grid_y")
    ds_list_delete(list,get_hex)
    ds_map_destroy(nearest)
    ds_grid_set(grid,get_x,get_y,-1)
    sound(beep)
    
    Hex_Color()
    Create_Hex()
    Create_Hex_Border()
    
    if ds_list_size(list) == 0
        {
        ds_list_destroy(list)
        ds_grid_destroy(grid)
        instance_destroy()
        }
    
    }

//Test_Break()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hoff = (size*w*3+size/2)/2
var voff = (sqrt(3)/2*(h+1)*size)/2

d3d_transform_add_translation(-hoff,-voff,0)
draw_set_color(c_black)
draw_rectangle(-hoff,-voff,hoff,voff,true)
d3d_transform_add_rotation_z(direction)
d3d_transform_add_translation(x,y,0)
draw_set_color(c_white)
Draw_Hex()
Draw_Hex_Border()

for (hy = 0;hy &lt; h;hy += 1)
    {
    for (hx = 0;hx &lt; w;hx += 1)
        {
        var num = ds_grid_get(grid,hx,hy)
        if num != -1
            {
            var xx =ds_map_find_value(num,"xx")
            var yy =ds_map_find_value(num,"yy")
            
            draw_set_color(c_orange)
            draw_point(xx,yy)
            
            if keyboard_check(vk_shift)
                {
                draw_set_color(c_white)
                draw_set_halign(fa_center)
                draw_set_valign(fa_middle)
                draw_text(xx,yy,string(ds_grid_get(grid,hx,hy)))
                }
            else
            if keyboard_check(vk_control)
                {
                draw_set_color(c_green)
                draw_set_halign(fa_center)
                draw_set_valign(fa_middle)
                draw_text(hex_x,hex_y,string(hx)+","+string(hy))
                }
            else
            if nearest != -1
                {
                draw_set_color(c_blue)
                draw_circle(hex_x,hex_y,4,true)
                }
            
            }
        }
    }
    
    
    
    
    d3d_transform_set_identity()


draw_set_color(c_black)
draw_set_color(c_blue)
draw_line(x,y,mouse_x,mouse_y)
//draw_rectangle(x_left,y_top,x_right,y_bottom,true)




    
if nearest != -1
    {
    draw_set_color(c_blue)
    draw_set_halign(fa_left)
    draw_set_valign(fa_bottom)
    draw_circle(mouse_x+8,mouse_y-8,12,false)
    draw_circle(mouse_x+26,mouse_y-8,12,false)
    draw_set_color(c_white)
    
    draw_set_color(c_black)
    draw_rectangle(mouse_x,mouse_y+16,mouse_x+12,mouse_y+112,false)
    for (i = 0;i &lt; 6;i += 1)
        {
        draw_set_color(ds_map_find_value(nearest,i))
        draw_text(mouse_x,mouse_y+16*i+32,string(i))
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x
y = mouse_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
